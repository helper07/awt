-- Create Department table
CREATE TABLE Department (
    dept_id INT PRIMARY KEY,
    dept_name VARCHAR(255) NOT NULL
);

-- Create Employee table
CREATE TABLE Employee (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(255) NOT NULL,
    salary DECIMAL(10, 2) NOT NULL,
    department_id INT,
    FOREIGN KEY (department_id) REFERENCES Department(dept_id)
);

-- Insert sample data into Department table
INSERT INTO Department (dept_id, dept_name) VALUES
    (1, 'Sales'),
    (2, 'HR'),
    (3, 'IT');

-- Insert sample data into Employee table
INSERT INTO Employee (emp_id, emp_name, salary, department_id) VALUES
    (1, 'John', 60000, 1),
    (2, 'Jane', 70000, 1),
    (3, 'Bob', 80000, 2),
    (4, 'Alice', 75000, 3),
    (5, 'Charlie', 90000, 1);

4. Answer the following Queries. 
a. Display name of employee who has highest salary [3] 
SELECT emp_name
FROM Employee
ORDER BY salary DESC
LIMIT 1;
b. Display biggest department with max. no. of employees [3]
SELECT d.dept_name, COUNT(e.emp_id) AS totalEmployees
FROM Department d
JOIN Employee e ON d.dept_id = e.department_id
GROUP BY d.dept_id
ORDER BY totalEmployees DESC
LIMIT 1;
 c. Write a cursor which shows department wise employee information [4]
DELIMITER //

CREATE PROCEDURE DepartmentWiseEmployeeInfo()
BEGIN
    DECLARE done INT DEFAULT FALSE;
    DECLARE dept_id INT;
    DECLARE dept_name VARCHAR(255);
    DECLARE emp_id INT;
    DECLARE emp_name VARCHAR(255);
    DECLARE salary DECIMAL(10, 2);

    -- Declare cursor
    DECLARE cur CURSOR FOR
        SELECT d.dept_id, d.dept_name, e.emp_id, e.emp_name, e.salary
        FROM Department d
        LEFT JOIN Employee e ON d.dept_id = e.department_id
        ORDER BY d.dept_id, e.emp_id;

    -- Declare continue handler
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

    OPEN cur;

    -- Fetch and display data
    FETCH cur INTO dept_id, dept_name, emp_id, emp_name, salary;
    WHILE NOT done DO
        IF dept_id IS NOT NULL THEN
            SELECT CONCAT('Department: ', dept_name, ', Employee: ', emp_name, ', Salary: ', salary) AS result;
        END IF;
        FETCH cur INTO dept_id, dept_name, emp_id, emp_name, salary;
    END WHILE;

    CLOSE cur;
END //

DELIMITER ;

-- Call the stored procedure
CALL DepartmentWiseEmployeeInfo();
 d. List all the employees who work in Sales dept and salary > 50000
SELECT emp_name
FROM Employee
WHERE department_id = (SELECT dept_id FROM Department WHERE dept_name = 'Sales')
    AND salary > 50000;
