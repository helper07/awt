-- Create Project table
CREATE TABLE Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    project_type VARCHAR(255) NOT NULL,
    duration_months INT NOT NULL
);

-- Create Employee table
CREATE TABLE Employee (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(255) NOT NULL
);

-- Create EmployeeProject table (to represent many-to-many relationship)
CREATE TABLE EmployeeProject (
    emp_id INT,
    project_id INT,
    PRIMARY KEY (emp_id, project_id),
    FOREIGN KEY (emp_id) REFERENCES Employee(emp_id),
    FOREIGN KEY (project_id) REFERENCES Project(project_id)
);

-- Insert sample data into Project table
INSERT INTO Project (project_id, project_name, project_type, duration_months) VALUES
    (1, 'Project A', 'Development', 6),
    (2, 'Project B', 'Testing', 4),
    (3, 'Project C', 'Design', 2),
    (4, 'Project D', 'Development', 5),
    (5, 'Project E', 'Testing', 3);

-- Insert sample data into Employee table
INSERT INTO Employee (emp_id, emp_name) VALUES
    (101, 'Mr. Patil'),
    (102, 'Mr. Kumar'),
    (103, 'Mrs. Singh'),
    (104, 'Ms. Joshi'),
    (105, 'Mr. Deshmukh');

-- Insert sample data into EmployeeProject table
INSERT INTO EmployeeProject (emp_id, project_id) VALUES
    (101, 1),
    (102, 1),
    (103, 2),
    (104, 3),
    (105, 4),
    (105, 5);
4. Answer the following Queries
 a. List all names of projects where Project_type =….. [3] 
SELECT project_name
FROM Project
WHERE project_type = 'Development';
b. List all the projects with duration greater than 3 months [3]
SELECT project_name
FROM Project
WHERE duration_months > 3;
 c. Count no. of employees working on ……..project [4] 
SELECT COUNT(emp_id) AS num_employees
FROM EmployeeProject
WHERE project_id = 1;
d. List the names of projects on which Mr. Patil is working
SELECT p.project_name
FROM Project p
JOIN EmployeeProject ep ON p.project_id = ep.project_id
JOIN Employee e ON ep.emp_id = e.emp_id
WHERE e.emp_name = 'Mr. Patil';
